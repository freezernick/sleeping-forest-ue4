image: node:latest

stages:
  - assembly
  - publish # Unfortunately yarn/npm version won't let us push uncommitted changes

# Compile the golang project in /devops folder.
FetchCritstrike:
  image: golang:latest
  stage: assembly
  script:
    # Make the output folders
    - mkdir -p bin/{linux,macos,win64}
    # UPDATE: The binaries now have to be copied from approriate repo
    - sudo wget -P ./bin/linux/critstrike https://github.com/suvam0451/critstrike-cli/releases/latest/download/critstrike
    - sudo wget -P ./bin/macos/critstrike https://github.com/suvam0451/critstrike-cli/releases/latest/download/critstrike_mac
    - sudo wget -P ./bin/win64/critstrike.exe https://github.com/suvam0451/critstrike-cli/releases/latest/download/critstrike.exe
  artifacts:
    paths:
      - ./bin

Default:
  stage: publish
  script:
    # Comment out to use github packages
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}" # This alone will allow access
    - yarn login --registry=https://npm.pkg.github.com
    # Comment out to use gitlab packages
    # - npm config set '//gitlab.com/api/v4/packages/npm/:_authToken' "${GITLAB_AUTH_TOKEN}
    # - yarn config set '//gitlab.com/api/v4/packages/npm/:_authToken' "${GITLAB_AUTH_TOKEN}
    # - yarn login --registry=https://gitlab.com/api/v4/packages/npm
    - yarn install
    - yarn run webpack
    - yarn vsce package
  dependencies:
    - FetchCritstrike
  artifacts:
    paths:
      - ./*.vsix

# patch updates
Shipping_Patch:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish patch -p ${VSCODE_AUTH_TOKEN} --yarn
  dependencies:
    - FetchCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-patch/
  artifacts:
    paths:
      - ./*.vsix

# minor version increments
Shipping_Minor:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish minor -p ${VSCODE_AUTH_TOKEN} --yarn
  dependencies:
    - FetchCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-minor/
  artifacts:
    paths:
      - ./*.vsix

# major version increments
Shipping_Major:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish major -p ${VSCODE_AUTH_TOKEN} --yarn
  dependencies:
    - FetchCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-major/
  artifacts:
    paths:
      - ./*.vsix
