{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "USF/USH file support",
	"injectionSelector": "L:source",
	"scopeName": "source.usf",
	"fileTypes": [
		"hlsl"
	],
	"patterns": [
		{
			"include": "#engine_params"
		},
		{
			"include": "#comment_fix"
		}
	],
	"repository": {
		"comment_fix": {
			"patterns": [
				{
					"name": "comment.line.double-slash.yeeto",
					"begin": "//",
					"end": "$"
				}
			]
		},
		"engine_params": {
			"patterns": [
				{
					"name": "comment.line.double-slash.yeet",
					"match": "//(.*?)$"
				},
				{
					"match": "[ \\(](Material|View)\\.([a-zA-Z_0-9]*)",
					"comment": "Material is inbuilt",
					"captures": {
						"1": {
							"name": "support.type.object.hlsl"
						},
						"2": {
							"name": "variable.parameter"
						}
					}
				},
				{
					"match": "([a-zA-Z_]*)\\.(a-zA-Z_0-9)\\(.*?\\)",
					"captures": {
						"1": {
							"name": "support.type.object"
						},
						"2": {
							"name": "support.function"
						}
					}
				},
				{
					"begin": "\/\\*\\*?",
					"end": "\\*\/",
					"name": "comment.block",
					"patterns": [
						{
							"begin": "@name",
							"end": "$",
							"patterns": [
								{
									"match": "[ \t]*([a-zA-Z0-9_-]*)",
									"captures": {
										"1": {
											"name": "string.quoted.double.hlsl"
										}
									}
								}
							]
						},
						{
							"begin": "@usewith",
							"end": "$",
							"patterns": [
								{
									"name": "string.quoted.double.hlsl",
									"match": "(SkeletalMesh|EditorComp|ParticleSprite|BeamTrails|ParticleMesh|NiagaraSprite|NiagaraRibbon|NiagaraMesh|GeometryCache|StaticLight|Morphtargets|SplineMesh|InstancedMesh|GeometryCollection|Clothing|Water|HairStrand)+"
								},
								{
									"name": "support.type.object",
									"match": "(Niagara|Cascade|Simulation|AnyMesh+)"
								}
							]
						},
						{
							"begin": "@domain",
							"end": "$",
							"patterns": [
								{
									"name": "string.quoted.double.hlsl",
									"match": "MD_SURFACE|MD_DEFERRED_DECAL|MD_LIGHT_FUNCTION|MD_VOLUME|MD_POST_PROCESS|MD_UI|[0-6]"
								}
							]
						},
						{
							"begin": "@param",
							"end": "$",
							"patterns": [
								{
									"match": "[ \t]*(UV)",
									"captures": {
										"1": {
											"name": "support.type.object"
										}
									}
								},
								{
									"match": "[ \t]*([a-zA-Z0-9]*)[ \t]*(float[1-4]?|Texture)(\\(([0-9,\\.f]*)\\))?",
									"captures": {
										"1": {
											"name": "string.quoted.double.hlsl"
										},
										"2": {
											"name": "storage.type.basic.hlsl"
										},
										"4": {
											"name": "constant.numeric.decimal.hlsl"
										}
									}
								}
							]
						},
						{
							"begin": "@tessellation",
							"end": "$",
							"patterns": [
								{
									"name": "variable.parameter",
									"match": "0-2"
								}
							]
						},
						{
							"begin": "@returntype",
							"end": "$",
							"patterns": [
								{
									"match": "[ \t]*(float[2-4]?)",
									"captures": {
										"1": {
											"name": "storage.type.basic.hlsl"
										}
									}
								}
							],
							"beginCaptures": {
								"0": {
									"name": "keyword.control.hlsl"
								}
							}
						}
					]
				},
				{
					"match": "^(struct) (.*?) {",
					"captures": {
						"1": {
							"name": "storage.type.structured"
						},
						"2": {
							"name": "support.type.object"
						}
					}
				}
			]
		}
	}
}